"""
Imported randint from random
"""
from random import randint

class BattleshipGame:
    def __init__(self):
        # Set hidden board pattern
        self.HIDDEN_PATTERN = [[' '] * 5 for x in range(5)]
        self.GUESS_PATTERN = [[' '] * 5 for x in range(5)]
        # Symbols to show what is hit and sunk
        self.HIT_SYMBOL = '!'
        self.MISS_SYMBOL = '~'
        # Order the boards letter and number alignment
        self.alph_digit = {'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4}

    def take_name_input(self):
        while True:
            try:
                user_name = input("Please enter your name: \n")
                if not user_name:
                    raise ValueError("Your first name must be at least 1 letter")
                if any(char.isdigit() for char in user_name):
                    raise ValueError("Your first name must contain only letters")
                return user_name
            except ValueError as e:
                print(e)

    def welcome(self):
        print("Welcome to Battleships")
        user_name = self.take_name_input()
        print(f"\nHi {user_name}! Welcome to Battleships!")
        print("""Your objective is to locate the enemy ships.
        \nThe coordinates are generated by the computer each time
        You will have to guess the coordinates of the enemy ships.
        \nOne hit equals one sunken ship on the enemy's board.
        \nIf you hit 10 ships, you will win the game.
        \n'!' symbolises and explosion, meaning they are hit targets.
        \n'~' symbolises open water, meaning the shot has missed the enemy ship.
        \nBe aware that the grid is five wide,
        using integers 1 to 5 and Letters A to E.""")

    def create_board(self, guess_board):
        print('\nYour Guess Board:')
        print('# A B C D E')
        row_num = 1
        for row in guess_board:
            print(f"{row_num}|{'|'.join(row)}|")
            row_num += 1

    def find_ships(self):
        while True:
            try:
                row = input("Enter row (1 to 5): ")
                if row.isdigit() and 1 <= int(row) <= 5:
                    row = int(row) - 1
                    break
                else:
                    raise ValueError(
                        "Invalid input. Please enter a number between 1 and 5.")
            except ValueError as e:
                print(e)
                print("Please try again.")

        while True:
            try:
                column = input("Enter column (A to E): ")
                if (column.isalpha() and len(column) == 1
                        and 'A' <= column.upper() <= 'E'):
                    column = self.alph_digit[column.upper()]
                    break
                else:
                    raise ValueError(
                        "Invalid input. Please enter a letter between A and E.")
            except ValueError as e:
                print(e)
                print("Please try again.")
        return row, column

    def generate_ships(self, board):
        for _ in range(10):
            ship_row, ship_col = randint(0, 4), randint(0, 4)
            while board[ship_row][ship_col] == self.HIT_SYMBOL:
                ship_row, ship_col = randint(0, 4), randint(0, 4)
            board[ship_row][ship_col] = self.HIT_SYMBOL

    def count_sunk_ships(self, board):
        count = 0
        for row in board:
            for column in row:
                if column == self.HIT_SYMBOL:
                    count += 1
        return count

    def reset_board(self):
        for i in range(5):
            for j in range(5):
                self.HIDDEN_PATTERN[i][j] = ' '
                self.GUESS_PATTERN[i][j] = ' '

def main():
    """
    Define the main game loop with introduction message
    """
    welcome()
    reset_board()
    generate_ships(HIDDEN_PATTERN)
    # Generate the ships function with the hidden pattern.
    turns = 20
    # Player has 20 turns to guess the location of the ten ships.
    guess_board = GUESS_PATTERN
    while turns > 0:
        create_board(guess_board)
        row, column = find_ships()
        # Checks whether the coordinates have already been used on a turn
        if guess_board[row][column] == MISS_SYMBOL:
            print("You have already guessed these coordinates, try again")
        # Lets user know they have hit an enemy ship
        elif HIDDEN_PATTERN[row][column] == HIT_SYMBOL:
            print("Congratulations!"
                  + " You have hit and sank an enemy battleship.")
            guess_board[row][column] = HIT_SYMBOL
            # Deduct a turn each hit
            turns -= 1
        else:
            # Lets the user know they have missed the target
            print("Unlucky soldier, you missed the target.")
            guess_board[row][column] = MISS_SYMBOL
            # Deduct a turn each miss
            turns -= 1
        print(' You have ' + str(turns) + ' turns remaining. Game Over.')
        # Player needs to locate 10 ships to win.
    if count_sunk_ships(guess_board) == 10:
        print(
            "Congratulations! Mission complete."
            + "\n You Won, all enemy ships have been hit.")
        while True:
            play_input = input(
                "Do you want to play again? (Y/N): ").strip().lower()
            if play_input == 'y':
                main()
                break
            elif play_input == 'n':
                print("Goodbye for now!")
                quit()
            else:
                print("Please enter 'Y' or 'N'")
    while turns == 0:
        play_input = input(
            "Do you want to play again? (Y/N): ").strip().lower()
        if play_input == 'y':
            main()
            break
        elif play_input == 'n':
            print("Goodbye for now!")
            quit()
        else:
            print("Please enter 'Y' or 'N'")


main()
