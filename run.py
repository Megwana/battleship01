"""
Imported randint from random
"""
from random import randint

class BattleshipGame:
    def __init__(self):
        # Set hidden board pattern
        self.HIDDEN_PATTERN = [[' '] * 5 for x in range(5)]
        self.GUESS_PATTERN = [[' '] * 5 for x in range(5)]
        # Symbols to show what is hit and sunk
        self.HIT_SYMBOL = '!'
        self.MISS_SYMBOL = '~'
        # Order the boards letter and number alignment
        self.alph_digit = {'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4}

    def take_name_input(self):
        while True:
            try:
                user_name = input("Please enter your name: \n")
                if not user_name:
                    raise ValueError("Your first name must be at least 1 letter")
                if any(char.isdigit() for char in user_name):
                    raise ValueError("Your first name must contain only letters")
                return user_name
            except ValueError as e:
                print(e)

    def welcome(self):
        print("Welcome to Battleships")
        user_name = self.take_name_input()
        print(f"\nHi {user_name}! Welcome to Battleships!")
        print("""Your objective is to locate the enemy ships.
        \nThe coordinates are generated by the computer each time
        You will have to guess the coordinates of the enemy ships.
        \nOne hit equals one sunken ship on the enemy's board.
        \nIf you hit 10 ships, you will win the game.
        \n'!' symbolises and explosion, meaning they are hit targets.
        \n'~' symbolises open water, meaning the shot has missed the enemy ship.
        \nBe aware that the grid is five wide,
        using integers 1 to 5 and Letters A to E.""")

    def create_board(self, guess_board):
        print('\nYour Guess Board:')
        print('# A B C D E')
        row_num = 1
        for row in guess_board:
            print(f"{row_num}|{'|'.join(row)}|")
            row_num += 1

    def find_ships(self):
        while True:
            try:
                row = input("Enter row (1 to 5): ")
                if row.isdigit() and 1 <= int(row) <= 5:
                    row = int(row) - 1
                    break
                else:
                    raise ValueError(
                        "Invalid input. Please enter a number between 1 and 5.")
            except ValueError as e:
                print(e)
                print("Please try again.")

        while True:
            try:
                column = input("Enter column (A to E): ")
                if (column.isalpha() and len(column) == 1
                        and 'A' <= column.upper() <= 'E'):
                    column = self.alph_digit[column.upper()]
                    break
                else:
                    raise ValueError(
                        "Invalid input. Please enter a letter between A and E.")
            except ValueError as e:
                print(e)
                print("Please try again.")
        return row, column

    def generate_ships(self, board):
        for _ in range(10):
            ship_row, ship_col = randint(0, 4), randint(0, 4)
            while board[ship_row][ship_col] == self.HIT_SYMBOL:
                ship_row, ship_col = randint(0, 4), randint(0, 4)
            board[ship_row][ship_col] = self.HIT_SYMBOL

    def count_sunk_ships(self, board):
        count = 0
        for row in board:
            for column in row:
                if column == self.HIT_SYMBOL:
                    count += 1
        return count

    def reset_board(self):
        for i in range(5):
            for j in range(5):
                self.HIDDEN_PATTERN[i][j] = ' '
                self.GUESS_PATTERN[i][j] = ' '

def main():
    game = BattleshipGame()
    game.welcome()
    game.reset_board()  # Reset the game board for a new game
    game.generate_ships(game.HIDDEN_PATTERN)  # Generate ships on the hidden pattern board

    # Start the game loop
    turns = 20
    guess_board = game.GUESS_PATTERN
    while turns > 0:
        game.create_board(guess_board)
        row, column = game.find_ships()
        if guess_board[row][column] == game.MISS_SYMBOL:
            print("You have already guessed these coordinates, try again")
        elif game.HIDDEN_PATTERN[row][column] == game.HIT_SYMBOL:
            print("Congratulations! You have hit and sank an enemy battleship.")
            guess_board[row][column] = game.HIT_SYMBOL
            turns -= 1
        else:
            print("Unlucky soldier, you missed the target.")
            guess_board[row][column] = game.MISS_SYMBOL
            turns -= 1
        print(' You have ' + str(turns) + ' turns remaining. Game Over.')

    # Check if all ships are sunk
    if game.count_sunk_ships(guess_board) == 10:
        print("Congratulations! Mission complete.")
        print("You Won, all enemy ships have been hit.")
    else:
        print("Game Over. You ran out of turns.")

    # Ask if the player wants to play again
    while True:
        play_input = input("Do you want to play again? (Y/N): ").strip().lower()
        if play_input == 'y':
            main()
            break
        elif play_input == 'n':
            print("Goodbye for now!")
            quit()
        else:
            print("Please enter 'Y' or 'N'")

# Call the main function to start the game
if __name__ == "__main__":
    main()